name: Continuos Integration

on:
  push:
    branches:
      - main
      - master
      - development
  pull_request:
    branches:
      - main
      - master
      - development

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm install

    - name: Build Application
      run: npm run build

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm install

    - name: Run Unit Tests
      run: npm test

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    services:
        mysql:
          image: mysql:latest
          env:
            MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
            MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          ports:
            - 3306:3306
          options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
      

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm install

    - name: Set up Environment Variables
      env:
        TYPEORM_HOST: ${{ secrets.MYSQL_HOST }}
        TYPEORM_PORT: ${{ secrets.MYSQL_PORT }}
        TYPEORM_USERNAME: ${{ secrets.MYSQL_USER }}
        TYPEORM_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        TYPEORM_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        TYPEORM_SYNCHRONIZE: "true"
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "TYPEORM_HOST=${{ secrets.MYSQL_HOST }}" >> .env.test
        echo "TYPEORM_PORT=${{ secrets.MYSQL_PORT }}" >> .env.test
        echo "TYPEORM_USERNAME=${{ secrets.MYSQL_USER }}" >> .env.test
        echo "TYPEORM_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env.test
        echo "TYPEORM_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env.test
        echo "TYPEORM_SYNCHRONIZE=true" >> .env.test
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.test

    - name: Run End-to-End Tests
      run: |
        mv .env.test .env
        npm run test:e2e
      env:
        NODE_ENV: test